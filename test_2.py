from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import ReplyKeyboardRemove

import aiogram.utils.markdown as mar
import Text_serv, asyncio, logging
from tokenbot import TOKONBOT, MESSAGE_GROUP, TOKONBOT_POST
from keyboards_serv import key_s, underline_keyboard, confirm_keyboard

token = TOKONBOT
group_id = MESSAGE_GROUP
token_post = TOKONBOT_POST
group_id_guvm ='-1002022336658'

bot = Bot(token=token, parse_mode='HTML')
dp = Dispatcher(bot, storage=MemoryStorage())

bot_post = Bot(token=token_post, parse_mode='HTML')
dp_post = Dispatcher(bot_post)

async def send_and_save_messages(user_id, message_texts, keyboards, storage):
    message_ids = []
    for text, keyboard in zip(message_texts, keyboards):
        message = await bot.send_message(chat_id=user_id, text=text, reply_markup=keyboard)
        message_ids.append(message.message_id)
    storage[user_id] = message_ids


async def delete_previous_messages(user_id, storage):
    message_ids = storage.get(user_id, [])
    for message_id in message_ids:
        await bot.delete_message(chat_id=user_id, message_id=message_id)
    storage.pop(user_id, None)


async def send_section_messages(user_id, callback_query, message_texts, keyboards):
    await bot.delete_message(chat_id=user_id, message_id=callback_query.message.message_id)
    for text, keyboard in zip(message_texts, keyboards):
        await bot.send_message(chat_id=user_id, text=text, reply_markup=keyboard)
@dp_post.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose a language:",
                           reply_markup=key_s["lang_key"])

    await bot.send_message(chat_id=message.chat.id, text="*",
                           reply_markup=ReplyKeyboardRemove())

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose a language:",
                           reply_markup=key_s["lang_key"])

    await bot.send_message(chat_id=message.chat.id, text="*",
                           reply_markup=ReplyKeyboardRemove())


@dp.message_handler(lambda message: not any(symbol in message.text for symbol in ['‚úâ', 'üè†']))
async def store_user_message(message: types.Message):
    last_user_messages[message.from_user.id] = mar.quote_html(message.text)

#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –∫–æ–Ω–≤–µ—Ä—Ç—É
@dp.message_handler(lambda message: '‚úâ' in message.text)
async def send_user_message(message: types.Message):
    user_message = last_user_messages.get(message.from_user.id)
    error_txt = ''
    qwest_txt = ''
    lang = user_languages.get(message.from_user.id, 'rus')
    if not user_message or user_message.strip() == '':

        if lang == 'rus':
            error_txt = "–í—ã –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É –∏ –Ω–∞–∂–º–∏—Ç–µ ‚úâ —Å–Ω–æ–≤–∞."
        elif lang == 'eng':
            pass
        await message.answer(error_txt)
        return
    else:
        if lang == 'rus':
            qwest_txt = f'''<b>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ?</b>
            "{user_message[:4000]}"...
            –≤ –ì–£–í–ú –ú–í–î –†–æ—Å—Å–∏–∏?'''
        elif lang == 'eng':
            pass
        await bot.send_message(chat_id=message.chat.id, text=qwest_txt, reply_markup=confirm_keyboard)

#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –¥–æ–º–æ–π
@dp.message_handler(lambda message: 'üè†' in message.text)
async def start_command(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose a language:",
                           reply_markup=key_s["lang_key"], )
    await bot.send_message(chat_id=message.chat.id, text="*",
                           reply_markup=ReplyKeyboardRemove())
#–≤—ã–±—Ä–∞–Ω —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
@dp.callback_query_handler(text="rus")
async def choose_section_rus(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    user_languages[callback_query.from_user.id] = 'rus'
    message_texts = [f'''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:</b>
    
1Ô∏è‚É£ –î–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–æ—Å—Å–∏–∏.
2Ô∏è‚É£ –î–ª—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö –≥—Ä–∞–∂–¥–∞–Ω.
‚ùå3Ô∏è‚É£ –î–ª—è –≥—Ä–∞–∂–¥–∞–Ω –£–∫—Ä–∞–∏–Ω—ã, –õ–ù–†, –î–ù–†, –•–µ—Ä—Å–æ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏, –ó–∞–ø–æ—Ä–æ–∂—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏.
‚ùå4Ô∏è‚É£ –î–ª—è –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π.
{Text_serv.ru_ancor_bottom}''',

    ]
    keyboards = [key_s['ru_rf_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)
    await bot.send_message(chat_id=callback_query.from_user.id,
                           text="<b>‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è –ß—Ç–æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ì–£–í–ú –ú–í–î –†–æ—Å—Å–∏–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –≤ —á–∞—Ç –±–æ—Ç—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞–∂–º–∏—Ç–µ ‚úâ –Ω–∞ –Ω–∏–∂–Ω–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ</b>",
                           reply_markup=underline_keyboard)

#–Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–∞, –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ì–£–í–ú
@dp.callback_query_handler(lambda query: query.data == "confirm_yes")
async def confirm_send(query: types.CallbackQuery):
    user_message = last_user_messages.get(query.from_user.id)
    user_mention = f'<a href="tg://user?id={query.from_user.id}">{query.from_user.first_name}</a>'
    await bot.edit_message_text("*", chat_id=query.from_user.id, message_id=query.message.message_id, reply_markup=None)
    await bot.send_message(chat_id=query.from_user.id, text="–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è...", reply_markup=ReplyKeyboardRemove())
    await bot.send_message(group_id, f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_mention}: {user_message}")

    await asyncio.sleep(5)
    await bot.answer_callback_query(query.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    await bot.send_message(chat_id=query.from_user.id, text="–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.", reply_markup=underline_keyboard)

#–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ—Ç, –¥–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ì–£–í–ú
@dp.callback_query_handler(lambda query: query.data == "confirm_no")
async def cancel_send(query: types.CallbackQuery):
    await bot.edit_message_text("–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", chat_id=query.from_user.id, message_id=query.message.message_id, reply_markup=None)
    await bot.answer_callback_query(query.id, "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    await bot.send_message(chat_id=query.from_user.id, text="–ß—Ç–æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ì–£–í–ú –ú–í–î –†–æ—Å—Å–∏–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –≤ —á–∞—Ç –±–æ—Ç—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞–∂–º–∏—Ç–µ ‚úâ –Ω–∞ –Ω–∏–∂–Ω–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ", reply_markup=underline_keyboard)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§
@dp.callback_query_handler(text="ru_rf")
async def query_ru_rf(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''<b>–ì–¥–µ –í—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å?</b>
1Ô∏è‚É£ –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
‚ùå2Ô∏è‚É£ –ó–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
{Text_serv.ru_ancor_bottom}                                       ·Ö† ·Ö† '''
    ]
    keyboards = [key_s['ru_rf_in_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
@dp.callback_query_handler(text="ru_rf_in")
async def query_ru_rf_in(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''<b>–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª</b>
1Ô∏è‚É£ –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç 
2Ô∏è‚É£ –ó–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç
3Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–µ—Å—Ç—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è
4Ô∏è‚É£ –Ø —Å—Ç–∞–ª —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –æ–∫–∞–∑–∞–Ω–∏—é —Å–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ–º—É –ø–µ—Ä–µ—Å–µ–ª–µ–Ω–∏—é –≤ –†–æ—Å—Å–∏–π—Å–∫—É—é —Ñ–µ–¥–µ—Ä–∞—Ü–∏—é —Å–æ–æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤, –ø—Ä–æ–∂–∏–≤–∞—é—â–∏—Ö –∑–∞ —Ä—É–±–µ–∂–æ–º, –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞
‚ùå5Ô∏è‚É£ –Ø –∏(–∏–ª–∏) —á–ª–µ–Ω—ã –º–æ–µ–π —Å–µ–º—å–∏ - –≤—ã–Ω—É–∂–¥–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ—Å–µ–ª–µ–Ω—Ü—ã
‚ùå6Ô∏è‚É£ –ß–ª–µ–Ω –º–æ–µ–π —Å–µ–º—å–∏ –∏–ª–∏ –±–ª–∏–∑–∫–∏–π —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫ - –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω
‚ùå7Ô∏è‚É£ –Ø —Ö–æ—á—É –æ—Ñ–æ—Ä–º–∏—Ç—å –≤—ã—Ö–æ–¥ –∏–∑ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
{Text_serv.ru_ancor_bottom}'''
]
    keyboards = [key_s['ru_rf_in_pasp_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç
@dp.callback_query_handler(text="ru_rf_in_pasp")
async def query_ru_rf_in_pasp(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''<b>–í —Ä–∞–∑–¥–µ–ª–µ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–∞–Ω—ã –∫–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –∏ —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è.</b>

<b>–í —Ä–∞–∑–¥–µ–ª–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –í—ã –Ω–∞–π–¥–µ—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</b>,
1Ô∏è‚É£ –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã                                       ·Ö† ·Ö† ',
2Ô∏è‚É£ –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏                                         ·Ö† ·Ö† ',
{Text_serv.ru_ancor_bottom}                                                              '''
    ]
    keyboards = [key_s['ru_rf_in_pasp_faq_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ß–∞–í–æ
@dp.callback_query_handler(text="ru_rf_in_pasp_faq")
async def query_ru_rf_in_pasp_faq(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.iner_pasp_txt1, Text_serv.iner_pasp_txt2]
    keyboards = [None, key_s['ru_rf_in_pasp_1_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏
@dp.callback_query_handler(text="ru_rf_in_pasp_sit")
async def query_ru_rf_in_pasp_sit(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
1Ô∏è‚É£ –Ø —Ö–æ—á—É –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç
2Ô∏è‚É£ –£–∫—Ä–∞–ª–∏ –ø–∞—Å–ø–æ—Ä—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å?
3Ô∏è‚É£ –Ø –ø–æ—Ç–µ—Ä—è–ª –ø–∞—Å–ø–æ—Ä—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å?
4Ô∏è‚É£ –Ø –ø—Ä–æ—Å—Ä–æ—á–∏–ª –∑–∞–º–µ–Ω—É –ø–∞—Å–ø–æ—Ä—Ç–∞
5Ô∏è‚É£ –û—Ç–∫–∞–∑–∞–ª–∏ –≤ –≤—ã–¥–∞—á–µ
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_in_pasp_1_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen")
async def query_ru_rf_in_pasp_sit_oformlen(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
1Ô∏è‚É£ –£ –º–µ–Ω—è –∏–∑–º–µ–Ω–∏–ª–∞—Å—å —Ñ–∞–º–∏–ª–∏—è, –∏–º—è –∏–ª–∏ –æ—Ç—á–µ—Å—Ç–≤–æ.
2Ô∏è‚É£ –ü–∞—Å–ø–æ—Ä—Ç –∏—Å–ø–æ—Ä—á–µ–Ω
3Ô∏è‚É£ –£ –º–µ–Ω—è –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –≤–Ω–µ—à–Ω–æ—Å—Ç—å
4Ô∏è‚É£ –ó–∞–º–µ–Ω–∞ –ø–∞—Å–ø–æ—Ä—Ç–∞ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –°–°–°–†
5Ô∏è‚É£ –ò—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 20 –∏–ª–∏ 45 –ª–µ—Ç
6Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Å–ø–æ—Ä—Ç–∞ –≤ 14 –ª–µ—Ç –≤–ø–µ—Ä–≤—ã–µ
7Ô∏è‚É£ –Ø –æ–±–Ω–∞—Ä—É–∂–∏–ª –æ—à–∏–±–∫—É –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ
8Ô∏è‚É£ –£ –º–µ–Ω—è –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –º–µ—Å—Ç–æ –∏–ª–∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è

<b>–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –ø—Ä–∏—á–∏–Ω –Ω–µ—Å–∫–æ–ª—å–∫–æ?</b>
–ï—Å–ª–∏ –≤—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –§–ò–û –∏ –≤–∞–º –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 20 –∏–ª–∏ 45 –ª–µ—Ç, –≤—ã–±–µ—Ä–∏—Ç–µ 1Ô∏è‚É£ ¬´–ò–∑–º–µ–Ω–∏–ª–∏—Å—å —Ñ–∞–º–∏–ª–∏—è, –∏–º—è –∏–ª–∏ –æ—Ç—á–µ—Å—Ç–≤–æ¬ª
–ï—Å–ª–∏ –ø–∞—Å–ø–æ—Ä—Ç –∏—Å–ø–æ—Ä—á–µ–Ω –∏ –≤–∞–º –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 20 –∏–ª–∏ 45 –ª–µ—Ç, —É –≤–∞—Å –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –≤–Ω–µ—à–Ω–æ—Å—Ç—å –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å –º–µ—Å—Ç–æ –¥–ª—è —à—Ç–∞–º–ø–æ–≤, –≤—ã–±–µ—Ä–∏—Ç–µ 2Ô∏è‚É£ ¬´–ü–∞—Å–ø–æ—Ä—Ç –∏—Å–ø–æ—Ä—á–µ–Ω¬ª
–í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ª–∏—á–Ω–æ.
–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø—Ä–∏—ë–º –≤ –ú–§–¶ –∏–ª–∏ –≤ –ú–í–î –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_tf_pasp_sit_oformlen_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç-–∏–∑–º–µ–Ω–∏–ª–∏—Å—å –§–ò–û
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen_fio")
async def query_ru_rf_in_pasp_sit_oformlen_fio(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
1Ô∏è‚É£ –ó–∞–º–µ–Ω–∞ –§–ò–û –≤ —Å–≤—è–∑–∏ —Å –∑–∞–∫–ª—é—á–µ–Ω–∏–µ–º –±—Ä–∞–∫–∞
2Ô∏è‚É£ –ó–∞–º–µ–Ω–∞ –§–ò–û –≤ —Å–≤—è–∑–∏ —Å –∑—Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ–º –±—Ä–∞–∫–∞
3Ô∏è‚É£ –î—Ä—É–≥–∏–µ –ø—Ä–∏—á–∏–Ω—ã
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_sit_oformlen_fio_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç-–∏–∑–º–µ–Ω–∏–ª–∏—Å—å –§–ò–û-–±—Ä–∞–∫
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen_fio_brak")
async def query_ru_rf_in_pasp_sit_oformlen_fio_brak(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit1}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_in_pasp_sit_oformlen_fio_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)
#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç-–∏–∑–º–µ–Ω–∏–ª–∏—Å—å –§–ò–û-—Ä–∞–∑–≤–æ–¥
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen_fio_unbrak")
async def query_ru_rf_in_pasp_sit_oformlen_fio_unbrak(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit2}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_in_pasp_sit_oformlen_fio_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç-–∏–∑–º–µ–Ω–∏–ª–∏—Å—å –§–ò–û-–¥—Ä—É–≥–∏–µ –ø—Ä–∏—á–∏–Ω—ã
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen_fio_another")
async def query_ru_rf_in_pasp_sit_oformlen_fio_another(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit3}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_in_pasp_sit_oformlen_fio_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç-–ø–∞—Å–ø–æ—Ä—Ç –∏—Å–ø–æ—Ä—á–µ–Ω
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen_neprigoden")
async def query_ru_rf_in_pasp_sit_neprigoden(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit4}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_in_pasp_sit_oformlen_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç-—Å–º–µ–Ω–∞ –≤–Ω–µ—à–Ω–æ—Å—Ç–∏
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen_vneshnost")
async def query_ru_rf_in_pasp_sit_oformlen_vneshnost(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit5}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_in_pasp_sit_oformlen_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç-–ø–∞—Å–ø–æ—Ä—Ç cccp
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen_ussr")
async def query_ru_rf_in_pasp_sit_oformlen_ussr(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit6}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_in_pasp_sit_oformlen_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç-20-45
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen_2045")
async def query_ru_rf_in_pasp_sit_oformlen_2045(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit7}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_in_pasp_sit_oformlen_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç-14 –≤–ø–µ—Ä–≤—ã–µ
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen_14")
async def query_ru_rf_in_pasp_sit_oformlen_14(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit8}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_in_pasp_sit_oformlen_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç-–æ—à–∏–±–∫–∞ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen_mistake")
async def query_ru_rf_in_pasp_sit_oformlen_mistake(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit9}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_in_pasp_sit_oformlen_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç-–∏–∑–º–µ–Ω–∏–ª–æ—Å—å –º–µ—Å—Ç–æ –∏–ª–∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏–Ø
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_oformlen_izmdata")
async def query_ru_rf_in_pasp_sit_oformlen_izmdata(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit10}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_in_pasp_sit_oformlen_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-—É–∫—Ä–∞–ª–∏ –ø–∞—Å–ø–æ—Ä—Ç
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_ukraly")
async def query_ru_rf_in_pasp_sit_ukraly(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit11}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_pasp_sit_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–ø–æ—Ç–µ—Ä—è–ª –ø–∞—Å–ø–æ—Ä—Ç
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_poteral")
async def query_ru_rf_in_pasp_sit_poteral(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit12}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_pasp_sit_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏- –ø—Ä–æ—Å—Ä–æ—á–∏–ª –ø–æ–¥–∞—á—É
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_prosrochil")
async def query_ru_rf_in_pasp_sit_prosrochil(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit13}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_pasp_sit_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏- –æ—Ç–∫–∞–∑–∞–ª–∏
@dp.callback_query_handler(text="ru_rf_in_pasp_sit_otkaz")
async def query_ru_rf_in_pasp_sit_otkaz(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''
{Text_serv.iner_pasp_sit14}
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s['ru_rf_pasp_sit_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –ó–∞–≥—Ä–∞–Ω–∏—á–Ω—ã–π –ø–∞—Å–ø–æ—Ä—Ç
@dp.callback_query_handler(text="ru_rf_in_zp")
async def query_ru_rf_in_zp(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        f'''<b>–í —Ä–∞–∑–¥–µ–ª–µ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–∞–Ω—ã –∫–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –∏ —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è.</b>

<b>–í —Ä–∞–∑–¥–µ–ª–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –í—ã –Ω–∞–π–¥–µ—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</b>
1Ô∏è‚É£ –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã                                       ·Ö† ·Ö† ',
2Ô∏è‚É£ –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏                                         ·Ö† ·Ö† ',
{Text_serv.ru_ancor_bottom}                                                                  ·Ö† ·Ö† '''
    ]
    keyboards = [key_s['ru_rf_in_zp_faq_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –ó–∞–≥—Ä–∞–Ω–∏—á–Ω—ã–π –ø–∞—Å–ø–æ—Ä—Ç - –ß–∞–í–æ
@dp.callback_query_handler(text="ru_rf_in_zp_faq")
async def query_ru_rf_in_zp_faq(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['–†–∞–∑–¥–µ–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è']
    keyboards = [key_s['ru_rf_in_zp_1_back_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –ó–∞–≥—Ä–∞–Ω–∏—á–Ω—ã–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏
@dp.callback_query_handler(text="ru_rf_in_zp_sit")
async def query_ru_rf_in_zp_sit(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''<b>–í —Ä–∞–∑–¥–µ–ª–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –í—ã –Ω–∞–π–¥–µ—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</b>
    
1Ô∏è‚É£ –Ø —Ö–æ—á—É –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç —Å–µ–±–µ –∏–ª–∏ —Å–≤–æ–µ–º—É —Ä–µ–±–µ–Ω–∫—É
2Ô∏è‚É£ –ú–Ω–µ –Ω–∞–¥–æ —Å–¥–∞—Ç—å –∑–∞–≥–∞—Ä–Ω–ø–∞—Å–ø–æ—Ä—Ç –Ω–∞ —Ö—Ä–∞–Ω–µ–Ω–∏–µ
3Ô∏è‚É£ –£ –º–µ–Ω—è –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç–æ–º
4Ô∏è‚É£ –ú–Ω–µ –Ω—É–∂–µ–Ω –≤—Ç–æ—Ä–æ–π –∑–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç
    {Text_serv.ru_ancor_bottom}''']
    keyboards = [key_s["ru_rf_in_zp_sit_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


# –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –ó–∞–≥—Ä–∞–Ω–∏—á–Ω—ã–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
@dp.callback_query_handler(text="ru_rf_in_zp_sit_oformlen")
async def query_ru_rf_in_zp_sit_oformlen(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''{Text_serv.forein_pasp_sit1}
1Ô∏è‚É£ –ó–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è
2Ô∏è‚É£ –ó–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ä–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è
{Text_serv.ru_ancor_bottom}''']
    keyboards = [key_s["ru_rf_in_zp_sit_oformlen_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

# –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –ó–∞–≥—Ä–∞–Ω–∏—á–Ω—ã–π –ø–∞—Å–ø–æ—Ä—Ç - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏-–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
@dp.callback_query_handler(text="ru_rf_in_zp_sit_oformlen_new")
async def query_ru_rf_in_zp_sit_oformlen_new(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''<b>–ö–æ–º—É —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç?</b>
1Ô∏è‚É£ –ú–Ω–µ
2Ô∏è‚É£ –î–µ—Ç—è–º
3Ô∏è‚É£ –ù–µ–¥–µ–µ—Å–ø–æ—Å–æ–±–Ω–æ–º—É –ª–∏—Ü—É
4Ô∏è‚É£ –î—Ä—É–≥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É
{Text_serv.ru_ancor_bottom}''']
    keyboards = [key_s["ru_rf_in_zp_sit_oformlen_new_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–µ—Å—Ç—É –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è
@dp.callback_query_handler(text="ru_rf_in_regliv")
async def query_ru_rf_in_regliv(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
f'''<b>–í —Ä–∞–∑–¥–µ–ª–µ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–∞–Ω—ã –∫–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –∏ —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è.</b>

<b>–í —Ä–∞–∑–¥–µ–ª–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –í—ã –Ω–∞–π–¥–µ—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</b>
1Ô∏è‚É£ –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã                                       ·Ö† ·Ö† 
2Ô∏è‚É£ –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏                                         ·Ö† ·Ö† 
{Text_serv.ru_ancor_bottom}                                                            '''
    ]
    keyboards = [key_s['ru_rf_in_regliv_faq_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–µ—Å—Ç—É –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è - –ß–∞–í–æ
@dp.callback_query_handler(text="ru_rf_in_regliv_faq")
async def query_ru_rf_in_regliv_faq(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.reg_liv_txt1, Text_serv.reg_liv_txt2,
                     Text_serv.reg_liv_txt3, Text_serv.reg_liv_txt4]
    keyboards = [None, None, None, key_s["ru_rf_in_regliv_faq_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–µ—Å—Ç—É –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏
@dp.callback_query_handler(text="ru_rf_in_regliv_sit")
async def query_ru_rf_in_regliv_sit(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
f'''1Ô∏è‚É£ –Ø —É–∑–Ω–∞–ª, —á—Ç–æ –≤ –º–æ–µ–º –∂–∏–ª–æ–º –ø–æ–º–µ—â–µ–Ω–∏–∏ –ø—Ä–æ–ø–∏—Å–∞–Ω –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–Ω–µ —á–µ–ª–æ–≤–µ–∫. –ß—Ç–æ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–µ–ª–∞—Ç—å?
2Ô∏è‚É£ –Ø —Ö–æ—á—É —Å–Ω—è—Ç—å —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —É—á–µ—Ç–∞ –æ–¥–Ω–æ–≥–æ –∏–∑ –∂–∏–ª—å—Ü–æ–≤. –ö–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å?
3Ô∏è‚É£ –ü–µ—Ä–µ–µ–∑–¥ –≤ –¥—Ä—É–≥–æ–π —Ä–µ–≥–∏–æ–Ω
{Text_serv.ru_ancor_bottom} '''
    ]
    keyboards = [key_s['ru_rf_in_regliv_sit_chchel_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–µ—Å—Ç—É –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ - –ø—Ä–æ–ø–∏—Å–∞–Ω –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–Ω–µ —á–µ–ª–æ–≤–µ–∫
@dp.callback_query_handler(text="ru_rf_in_regliv_sit_chchel")
async def query_ru_rf_in_regliv_sit_chchel(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['–†–∞–∑–¥–µ–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è']
    keyboards = [key_s["ru_rf_in_regliv_sit_pereezd_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–µ—Å—Ç—É –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ - –Ø —Ö–æ—á—É —Å–Ω—è—Ç—å —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —É—á–µ—Ç–∞ –æ–¥–Ω–æ–≥–æ –∏–∑ –∂–∏–ª—å—Ü–æ–≤
@dp.callback_query_handler(text="ru_rf_in_regliv_sit_snone")
async def query_ru_rf_in_regliv_sit_snone(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['–†–∞–∑–¥–µ–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è']
    keyboards = [key_s["ru_rf_in_regliv_sit_pereezd_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

#–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ - –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–µ—Å—Ç—É –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ - –ø–µ—Ä–µ–µ–∑–¥ –≤ –¥—Ä—É–≥–æ–π —Ä–µ–≥–∏–æ–Ω
@dp.callback_query_handler(text="ru_rf_in_regliv_sit_pereezd")
async def query_ru_rf_in_regliv_sit_pereezd(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['–í—ã —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º –∂–∏–ª–æ–º –ø–æ–º–µ–∂–µ–Ω–∏–∏?']
    keyboards = [key_s['ru_rf_in_regliv_sit_pereezd_yes-no_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_regliv_sit_pereezd_yes")
async def query_ru_rf_in_regliv_sit_pereezd_yes(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ –ø—Ä–∞–≤–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –∂–∏–ª–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ –≤ –ï–ì–†–ù?']
    keyboards = [key_s['ru_rf_in_regliv_sit_pereezd_yes-no_yes-no_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_regliv_sit_pereezd_no")
async def query_ru_rf_in_regliv_sit_pereezd_no(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['–†–∞–∑–¥–µ–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è']
    keyboards = [key_s['ru_rf_in_regliv_sit_pereezd_yes_yes-no_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_regliv_sit_pereezd_yes_yes")
async def query_ru_rf_in_regliv_pereezd_yes_yes(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –í–∞–º...']
    keyboards = [key_s['ru_rf_in_regliv_sit_pereezd_yes-no_yes-no_key_1']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_regliv_sit_pereezd_yes_no")
async def query_ru_rf_in_regliv_sit_pereezd_yes_no(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['–†–∞–∑–¥–µ–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è']
    keyboards = [key_s["ru_rf_in_regliv_sit_pereezd_yes_-no_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_regliv_sit_pereezd_yes_yes_mfc")
async def ru_rf_in_regliv_sit_pereezd_yes_yes_mfc(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['–†–∞–∑–¥–µ–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è']
    keyboards = [key_s["ru_rf_in_regliv_sit_pereezd_yes_yes_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_regliv_sit_pereezd_yes_yes_epgu")
async def ru_rf_in_regliv_sit_pereezd_yes_yes_epgu(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['–†–∞–∑–¥–µ–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è']
    keyboards = [key_s["ru_rf_in_regliv_sit_pereezd_yes_yes_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr")
async def query_ru_rf_in_gospr(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''1Ô∏è‚É£ –ö–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä –ø–æ–¥—ä–µ–º–Ω—ã—Ö –º–Ω–µ –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è
2Ô∏è‚É£ –ö–∞–∫–æ–π –ø–æ—Ä—è–¥–æ–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—ä–µ–º–Ω—ã—Ö
3Ô∏è‚É£ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–º–µ–Ω–∏—Ç—å —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ–± —É—á–∞—Å—Ç–∏–∏ –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ?
4Ô∏è‚É£ –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã?
5Ô∏è‚É£ –í –∫–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –∞–Ω—É–ª–∏—Ä—É–µ—Ç—Å—è —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã?
6Ô∏è‚É£ –ö–∞–∫ —Å–∞–º–æ–º—É –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —É—á–∞—Å—Ç–∏—è –≤ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ?
7Ô∏è‚É£ –ú–Ω–µ –æ—Ç–∫–∞–∑–∞–ª–∏ –≤ –ø—Ä–∏–µ–º–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –æ–± —É—á–∞—Å—Ç–∏–∏ –≤ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ
8Ô∏è‚É£ –ú–Ω–µ –æ—Ç–∫–∞–∑–∞–ª–∏ –≤ –≤—ã–¥–∞—á–µ —Å–≤–∏–¥–µ–ª—å—Å—Ç–≤–∞ –æ–± —É—á–∞—Å—Ç–∏–∏ –≤ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ
{Text_serv.ru_ancor_bottom} '''
                     ]
    keyboards = [key_s['ru_rf_in_gospr_razmpod_key']
                 ]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_razmpod")
async def query_ru_rf_in_gospr_razmpod(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_txt]
    keyboards = [key_s['ru_rf_in_gospr_razmpod_yes-no_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_razmpod_yes")
async def query_ru_rf_in_gospr_razmpod_yes(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_txt1]
    keyboards = [key_s['ru_rf_in_gospr_porpolpod_1_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_razmpod_no")
async def query_ru_rf_in_gospr_razmpod_no(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_txt2]
    keyboards = [key_s['ru_rf_in_gospr_porpolpod_1_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_porpolpod")
async def query_ru_rf_in_gospr_porpolpod(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_txt3]
    keyboards = [key_s['ru_rf_in_gospr_mneotkazali_1_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_mneotkazali")
async def query_ru_rf_in_gospr_mneotkazali(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_txt4]
    keyboards = [key_s["ru_rf_in_gospr_home_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid")
async def query_ru_rf_in_gospr(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''1Ô∏è‚É£ –£ –≤–∞—Å –∏–∑–º–µ–Ω–∏–ª—Å—è —Å–æ—Å—Ç–∞–≤ —Å–µ–º—å–∏?
2Ô∏è‚É£ –£ –í–∞—Å –∏–∑–º–µ–Ω–∏–ª–æ—Å—å —Å–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ?
3Ô∏è‚É£ –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã?
4Ô∏è‚É£ –£ –í–∞—Å –ª–∏–±–æ —á–ª–µ–Ω–æ–≤ –í–∞—à–µ–π —Å–µ–º—å–∏ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏, –∏–º–µ–Ω–∏, –æ—Ç—á–µ—Å—Ç–≤–∞?',
5Ô∏è‚É£ –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –≤ –≤—ã–¥–∞–Ω–Ω–æ–º —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏, –æ—à–∏–±–∫–∏ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–ø–∏—Å–µ–π, –ø–µ—á–∞—Ç–µ–π, —à—Ç–∞–º–ø–æ–≤?',
6Ô∏è‚É£ –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –≤—ã–¥–∞–Ω–Ω–æ–µ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ–ø—Ä–∏–≥–æ–¥–Ω–æ –ø–æ –ø—Ä–∏—á–∏–Ω–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π, –Ω–∞—Ä—É—à–∞—é—â–∏—Ö —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –∏–ª–∏ –µ–≥–æ —á–∞—Å—Ç–µ–π?',
7Ô∏è‚É£ –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –≤ –≤—ã–¥–∞–Ω–Ω–æ–º —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –ø–æ–¥—á–∏—Å—Ç–∫–∏, –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø–µ—Ä–µ–∫–ª–µ–µ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è?',
8Ô∏è‚É£ –ß—Ç–æ –¥–µ–ª–∞—Ç—å –≤ —Å–ª—É—á–∞–µ —É—Ç—Ä–∞—Ç—ã —á–ª–µ–Ω–æ–º —Å–µ–º—å–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ì–û—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã, —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–µ, —Å—Ç–∞—Ç—É—Å–∞ —á–ª–µ–Ω–∞ —Å–µ–º—å–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ì–û—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã?'
{Text_serv.ru_ancor_bottom} ''']
    keyboards = [key_s['ru_rf_in_gospr_zamsvid_sostavsevi_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_sostavsevi")
async def query_ru_rf_in_gospr_zamsvid_sostavsevi(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['''1Ô∏è‚É£ –£ –≤–∞—Å —Ä–æ–¥–∏–ª—Å—è —Ä–µ–±—ë–Ω–æ–∫ –∏–ª–∏ –í—ã —É—Å—ã–Ω–æ–≤–∏–ª–∏, –ø—Ä–∏–Ω—è–ª–∏ –ø–æ–¥ –æ–ø–µ–∫—É –∏–ª–∏ –ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Ä–µ–±–µ–Ω–∫–∞?
2Ô∏è‚É£ –£ –í–∞—Å —É–º–µ—Ä –æ–¥–∏–Ω –∏–∑ —á–ª–µ–Ω–æ–≤ –í–∞—à–µ–π —Å–µ–º—å–∏?''']
    keyboards = [key_s['ru_rf_in_gospr_zamsvid_sostavsevi_rebenok_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_sempoloshen")
async def query_ru_rf_in_gospr_zamsvid_sempoloshen(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = ['''1Ô∏è‚É£ –í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –±—Ä–∞–∫?
2Ô∏è‚É£ –í—ã —Ä–∞—Å—Ç–æ—Ä–≥–ª–∏ –±—Ä–∞–∫?''']
    keyboards = [key_s['ru_rf_in_gospr_zamsvid_sempoloshen_brak_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_poteryali")
async def query_ru_rf_in_gospr_zamsvid_poteryali(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_poteryli_txt]
    keyboards = [key_s["ru_rf_in_gospr_zamsvid_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_smenaystdannyh")
async def query_ru_rf_in_gospr_zamsvid_smenaystdannyh(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_smenadanyh_txt]
    keyboards = [key_s["ru_rf_in_gospr_zamsvid_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_svidoshibky")
async def query_ru_rf_in_gospr_zamsvid_svidoshibky(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_smenadanyh_txt]
    keyboards = [key_s["ru_rf_in_gospr_zamsvid_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_svidneprigodno")
async def query_ru_rf_in_gospr_zamsvid_svidneprigodno(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_smenadanyh_txt]
    keyboards = [key_s["ru_rf_in_gospr_zamsvid_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_svidsispravl")
async def query_ru_rf_in_gospr_zamsvid_svidsispravl(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_smenadanyh_txt]
    keyboards = [key_s["ru_rf_in_gospr_zamsvid_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_utratastatusa")
async def query_ru_rf_in_gospr_zamsvid_utratastatusa(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_smenadanyh_txt]
    keyboards = [key_s["ru_rf_in_gospr_zamsvid_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_sostavsevi_rebenok")
async def query_ru_rf_in_gospr_zamsvid_sostavsevi_rebenok(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_rebenok_txt]
    keyboards = [key_s["ru_rf_in_gospr_zamsvid_sostavsevi_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_sostavsevi_umer")
async def query_ru_rf_in_gospr_zamsvid_sostavsevi_umer(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_umer_txt]
    keyboards = [key_s["ru_rf_in_gospr_zamsvid_sostavsevi_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_sempoloshen_brak")
async def query_ru_rf_in_gospr_zamsvid_sempoloshen_brak(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_brak_txt]
    keyboards = [key_s["ru_rf_in_gospr_zamsvid_sempoloshen_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_rf_in_gospr_zamsvid_sempoloshen_unbrak")
async def query_ru_rf_in_gospr_zamsvid_sempoloshen_unbrak(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_unbrak_txt]
    keyboards = [key_s["ru_rf_in_gospr_zamsvid_sempoloshen_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_rf_in_gospr_zaksroksvid")
async def query_ru_rf_in_gospr_zaksroksvid(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_txt5]
    keyboards = [key_s["ru_rf_in_gospr_home_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_rf_in_gospr_anulsvid")
async def query_ru_rf_in_gospr_anulsvid(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_txt6p1,Text_serv.gosprog_txt6p1]
    keyboards = [key_s[None, "ru_rf_in_gospr_home_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_rf_in_gospr_mneotkazalevydat")
async def query_ru_rf_in_gospr_mneotkazalevydat(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [Text_serv.gosprog_txt7]
    keyboards = [key_s["ru_rf_in_gospr_home_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig")
async def query_ru_ig(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
f'''<b>–ì–¥–µ –í—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å?</b>
–í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
‚ùå –ó–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
‚ùå –í –ø—É–Ω–∫—Ç–µ –ø—Ä–æ–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—É—é –≥—Ä–∞–Ω–∏—Ü—É –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
{Text_serv.ru_ancor_bottom}        '''
    ]
    keyboards = [key_s['ru_ig_in_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in")
async def query_ru_ig_in(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
f'''<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏</b>'
–Ø —Ö–æ—á—É —Å—Ç–∞—Ç—å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º –†–æ—Å—Å–∏–∏                  ·Ö† ·Ö† 
{Text_serv.ru_ancor_bottom} '''
        # '‚ùå –Ø - –£—á–∞—Å—Ç–Ω–∏–∫ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –æ–∫–∞–∑–∞–Ω–∏—é —Å–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ–º—É –ø—Ä–µ—Å–µ–ª–µ–Ω–∏—é –≤ –†–æ—Å—Å–∏–π—Å–∫—É—é –§–µ–¥–µ—Ä–∞—Ü–∏—é —Å–æ–æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤, –ø—Ä–æ–∂–∏–≤–∞—é—â–∏—Ö –∑–∞ —Ä—É–±–µ–∂–æ–º',
        # '‚ùå –Ø –Ω–∞–º–µ—Ä–µ–Ω –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–æ–∂–∏–≤–∞—Ç—å –≤ –†–æ—Å—Å–∏–∏',
        # '‚ùå –Ø –Ω–∞—Ö–æ–∂—É—Å—å —Å –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–º –≤–∏–∑–∏—Ç–æ–º –≤ –†–æ—Å—Å–∏–∏',
        # '‚ùå –Ø —É—á—É—Å—å –≤ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –≥–æ—Ç–æ–≤–ª—é—Å—å –∫ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é',
        # '‚ùå –Ø —Ä–∞–±–æ—Ç–∞—é –ø–æ –Ω–∞–π–º—É –∏–ª–∏ –±—É–¥—É —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è',
        # '‚ùå –Ø –∏—â—É —É–±–µ–∂–∏—â–µ –≤ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏',
        # '‚ùå –ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–∞ –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —É—á–µ—Ç, –∞ —Ç–∞–∫–∂–µ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –º–µ—Å—Ç—É –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ—Å—Ç–∞ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è',
        # '‚ùå –£ –º–µ–Ω—è –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–µ–±—ã–≤–∞–Ω–∏–µ–º –≤ –†–æ—Å—Å–∏–∏'
    ]
    keyboards = [key_s['ru_ig_in_sitizen_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen")
async def query_ru_ig_in_sitizen(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
f'''<b>{Text_serv.sitizen_txt1}</b>
1Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
2Ô∏è‚É£ –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
3Ô∏è‚É£ –ö–∞–∫ –ø—Ä–∏–Ω–µ—Å—Ç–∏ –ü—Ä–∏—Å—è–≥—É –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
{Text_serv.ru_ancor_bottom} '''
]
    keyboards = [key_s['ru_ig_in_sitizen_manual_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_manual")
async def query_ru_ig_in_sitizen_manual(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
f'''<b>–£ –≤–∞—Å –µ—Å—Ç—å?</b>                                                      ·Ö† ·Ö† 
–í–∏–¥ –Ω–∞ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–æ –≤ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
{Text_serv.ru_ancor_bottom} 
'''
]
    keyboards = [key_s['ru_ig_in_sitizen_manual_vng_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_manual_vng_yes")
async def query_ru_ig_in_sitizen_manual_vng_yes(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
f'''<b>–£ –≤–∞—Å –µ—Å—Ç—å?</b>                                                      ·Ö† ·Ö† 
–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–æ—Å–∏—Ç–µ–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
{Text_serv.ru_ancor_bottom} 
'''
]
    keyboards = [key_s['ru_ig_in_sitizen_manual_vng+sertrus_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_manual_vng+sertrus_yes")
async def query_ru_ig_in_sitizen_manual_vngsertrus_yes(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man1p1,
        Text_serv.sitizen_man1p2
        ]
    keyboards = [None, key_s["ru_ig_in_sitizen_manual_vng+sertrus_yes_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_manual_vng+sertrus_no")
async def query_ru_ig_in_sitizen_manual_vngsertrus_no(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
f'''<b>–£ –≤–∞—Å –µ—Å—Ç—å?</b>                                                      ·Ö† ·Ö† 
–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ì–æ—Å–ø—Ä–æ–≥—Ä–∞–º–º—ã
{Text_serv.ru_ancor_bottom} 
'''
]
    keyboards = [key_s['ru_ig_in_sitizen_manual_vng+gosprog_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_manual_vng+gosprog_yes")
async def query_ru_ig_in_sitizen_manual_vnggosprog_yes(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man2
        ]
    keyboards = [key_s["ru_ig_in_sitizen_manual_vng+gosprog_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_manual_vng+gosprog_no")
async def query_ru_ig_in_sitizen_manual_vnggosprog_no(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
f'''<b>–ü–µ—Ä–µ–¥ –í–∞–º–∏ –ø–µ—Ä–µ—á–µ–Ω—å —Å–∞–º—ã—Ö —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ—Å–Ω–æ–≤–∞–Ω–∏–π, –ø–æ–∑–≤–æ–ª—è—é—â–∏—Ö –ø–æ–ª—É—á–∏—Ç—å –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ</b>
1Ô∏è‚É£ –Ø —è–≤–ª—è—é—Å—å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º –£–∫—Ä–∞–∏–Ω—ã, —Ä–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å, –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ú–æ–ª–¥–æ–≤–∞, —Ä–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω –∏–ª–∏ –ö—ã—Ä–≥—ã–∑—Å–∫–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–∏.
2Ô∏è‚É£ –ú–æ–π –±–ª–∏–∑–∫–∏–π —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫ - –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω –†–æ—Å—Å–∏–∏.
(–±–ª–∏–∑–∫–∏–º–∏ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º–∏ —è–≤–ª—è—é—Ç—Å—è: —Ä–æ–¥–∏—Ç–µ–ª–∏, –¥–µ—Ç–∏, —Ä–æ–¥–Ω—ã–µ –±—Ä–∞—Ç—å—è –∏ —Å–µ—Å—Ç—Ä—ã, –±–∞–±—É—à–∫–∏, –¥–µ–¥—É—à–∫–∏,–≤–Ω—É–∫–∏
3Ô∏è‚É£ –Ø –≤–ª–∞–¥–µ—é —Ä—É—Å—Å–∫–∏–º —è–∑—ã–∫–æ–º –∫–∞–∫ —Ä–æ–¥–Ω—ã–º –∏ –≥–æ—Ç–æ–≤ –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—É –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –Ω–æ—Å–∏—Ç–µ–ª–µ–º —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.
4Ô∏è‚É£ –Ø–≤–ª—è—é—Å—å –ª–∏—Ü–æ–º –±–µ–∑ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞ –∏ —Ä–∞–Ω–µ–µ —Å–æ—Å—Ç—è–ª –≤ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–µ –°–°–°–†.
5Ô∏è‚É£ –†–æ–¥–∏–ª—Å—è –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–°–§–°–† –∏ —Ä–∞–Ω–µ–µ —Å–æ—Å—Ç–æ—è–ª –≤ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–µ –±—ã–≤—à–µ–≥–æ –°–°–°–†.
6Ô∏è‚É£ –ú–Ω–µ –Ω–∏—á–µ–≥–æ –∏–∑ –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç.
{Text_serv.ru_ancor_bottom}'''
        ]
    keyboards = [key_s["ru_ig_in_sitizen_vng_only_sng_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_sng")
async def query_ru_ig_in_sitizen_vng_only_sng(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        f'''<b>–í—ã –≤ –ø—Ä–æ—à–ª–æ–º —Å–æ—Å—Ç—è–ª–∏ –≤ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–µ –ë–µ–ª–æ—Ä—É—Å—Å–∫–æ–π –°–°–†, –ö–∞–∑–∞—Ö—Å–∫–æ–π –°–°–†, –∏–ª–∏ –ö–∏—Ä–≥–∏–∑—Å–∫–æ–π –°–°–† –∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–µ –±—ã–≤—à–µ–≥–æ –°–°–°–†, –ª–∏–±–æ —Ä–æ–¥–∏–ª–∏—Å—å –∏–ª–∏ –ø—Ä–æ–∂–∏–≤–∞–ª–∏ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –æ–¥–Ω–æ–π –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ä–µ—Å–ø—É–±–ª–∏–∫ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ–º–æ–≥–æ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞ –†–°–§–°–† –¥–æ 21 –¥–µ–∫–∞–±—Ä—è 1991 –≥–æ–¥–∞</b>
{Text_serv.ru_ancor_bottom} '''

]
    keyboards = [key_s['ru_ig_in_sitizen_vng_only_sng_yn_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_sng_yes")
async def ru_ig_in_sitizen_vng_only_sng_yes(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man3
    ]
    keyboards = [key_s["ru_ig_in_sitizen_vng_only_sng_back1_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_sng_no")
async def ru_ig_in_sitizen_vng_only_sng_no(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_txt2
    ]
    keyboards = [key_s['ru_ig_in_sitizen_vng_only_sng_blizrod_yn_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_sng_yes")
async def ru_ig_in_sitizen_vng_only_sng_yes(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_txt2
    ]
    keyboards = [None, key_s['ru_ig_in_sitizen_vng_only_sng_blizrod_yn_key']]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_sng_blizrod_yes")
async def ru_ig_in_sitizen_vng_only_sng_blizrod_yes(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man4p1,
        Text_serv.sitizen_man4p2
    ]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_sng_no_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_sng_blizrod_no")
async def ru_ig_in_sitizen_vng_only_sng_blizrod_no(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man5p1,
        Text_serv.sitizen_man5p2
    ]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_sng_no_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_inf")
async def query_ru_ig_in_sitizen_inf(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_txt3
]
    keyboards = [key_s["ru_ig_in_sitizen1_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)


@dp.callback_query_handler(text="ru_ig_in_sitizen_pris")
async def query_ru_ig_in_sitizen_pris(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_txt4

]
    keyboards = [key_s["ru_ig_in_sitizen1_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_blizkorod")
async def query_ru_ig_in_sitizen_vng_only_blizkorod(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [f'''1Ô∏è‚É£ –°–æ—Å—Ç–æ—é –Ω–µ –º–µ–Ω–µ–µ —Ç—Ä–µ—Ö –ª–µ—Ç –≤ –±—Ä–∞–∫–µ —Å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏, –ø—Ä–æ–∂–∏–≤–∞—é—â–∏–º –Ω–∞ —Ç—Ä–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏.
2Ô∏è‚É£ –°–æ—Å—Ç–æ—é –≤ –±—Ä–∞–∫–µ —Å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏, –ø—Ä–æ–∂–∏–≤–∞—é—â–∏–º –Ω–∞ —Ç—Ä–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ –∏ –∏–º–µ—é –≤ —ç—Ç–æ–º –±—Ä–∞–∫–µ –æ–±—â–∏—Ö –¥–µ—Ç–µ–π (–¥–æ 18 –ª–µ—Ç).
3Ô∏è‚É£ –û–¥–∏–Ω –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª–µ–π–≥—Ä–∞–∂–¥–∞–Ω–∏–Ω –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–æ–∂–∏–≤–∞–µ—Ç –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏.
4Ô∏è‚É£ –î–µ–µ—Å–ø–æ—Å–æ–±–Ω—ã–π —Å—ã–Ω –∏–ª–∏ –¥–æ—á—å –¥–æ—Å—Ç–∏–≥–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞ 18 –ª–µ—Ç –∏—è–≤–ª—è—é—Ç—Å—è –≥—Ä–∞–∂–¥–∞–Ω–∞–º–∏ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏.
5Ô∏è‚É£ –ú–æ–π —Ä–µ–±–µ–Ω–æ–∫ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏, –∞ –¥—Ä—É–≥–æ–π —Ä–æ–¥–∏—Ç–µ–ª—å —Ä–µ–±–µ–Ω–∫–∞, —è–≤–ª—è—é—â–∏–π—Å—è –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏, —É–º–µ—Ä –ª–∏–±–æ —Ä–µ—à–µ–Ω–∏–µ–º —Å—É–¥–∞ –≤—Å—Ç—É–ø–∏–≤—à–∏–º –≤ –∑–∞–∫–æ–Ω–Ω—É—é —Å–∏–ª—É, –ø—Ä–∏–∑–Ω–∞–Ω –±–µ–∑–≤–µ—Å—Ç–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º, –Ω–µ–¥–µ–µ—Å–ø–æ—Å–æ–±–Ω—ã–º –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤–∞—Ö.
6Ô∏è‚É£ –°—ã–Ω –∏–ª–∏ –¥–æ—á—å, –¥–æ—Å—Ç–∏–≥—à–∏–µ 18 –ª–µ—Ç, –ø—Ä–∏–∑–Ω–∞–Ω—ã –Ω–µ–¥–µ–µ—Å–ø–æ—Å–æ–±–Ω—ã–º–∏. 
<i>(–î–µ—Ç–∏ —è–≤–ª—è—é—Ç—Å—è –≥—Ä–∞–∂–¥–∞–Ω–∞–º–∏ –†–§, —Ä–µ—à–µ–Ω–∏–µ —Å—É–¥–∞ –≤—Å—Ç—É–ø–∏–ª–æ –≤ –∑–∞–∫–æ–Ω–Ω—É—é —Å–∏–ª—É, –∞ –¥—Ä—É–≥–æ–π —Ä–æ–¥–∏—Ç–µ–ª—å —Ä–µ–±–µ–Ω–∫–∞, —è–≤–ª—è—é—â–∏–π—Å—è –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏, —É–º–µ—Ä –ª–∏–±–æ —Ä–µ—à–µ–Ω–∏–µ–º —Å—É–¥–∞ –≤—Å—Ç—É–ø–∏–≤—à–∏–º –≤ –∑–∞–∫–æ–Ω–Ω—É—é —Å–∏–ª—É, –ø—Ä–∏–∑–Ω–∞–Ω –±–µ–∑–≤–µ—Å—Ç–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º, –Ω–µ–¥–µ–µ—Å–ø–æ—Å–æ–±–Ω—ã–º –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤–∞—Ö.</i>
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s["ru_ig_sitizen_vng_only_blizrod"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_blizrod_3brak")
async def query_ru_ig_in_sitizen_vng_only_blizrod_3brak(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man6p1,
        Text_serv.sitizen_man6p2
]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_blizrod_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_blizrod_brakdeti")
async def query_ru_ig_in_sitizen_vng_only_blizrod_brakdeti(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man7p1,
        Text_serv.sitizen_man7p2
]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_blizrod_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_blizrod_roditeli")
async def query_ru_ig_in_sitizen_vng_only_blizrod_poditeli(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man8p1,
        Text_serv.sitizen_man8p2
]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_blizrod_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_blizrod_deerebenok")
async def query_ru_ig_in_sitizen_vng_only_blizrod_deesrebenok(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man9p1,
        Text_serv.sitizen_man9p2
]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_blizrod_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_blizrod_rebenok+1roditel")
async def query_ru_ig_in_sitizen_vng_only_blizrod_rebenokroditel(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man9p1,
        Text_serv.sitizen_man9p2
]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_blizrod_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_blizrod_nedeesrebenok")
async def query_ru_ig_in_sitizen_vng_only_blizrod_nedeesrebenok(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man9p1,
        Text_serv.sitizen_man9p2]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_blizrod_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_vladeyrus")
async def query_ru_ig_in_sitizen_vng_only_vladeyrus(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man12]
    keyboards = [key_s["ru_ig_in_sitizen_vng_only_sng_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_lbgussr")
async def query_ru_ig_in_sitizen_vng_only_lbgussr(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man13p1, Text_serv.sitizen_man13p1
    ]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_sng_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_borninussr")
async def query_ru_ig_in_sitizen_vng_only_borninussr(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man9p1, Text_serv.sitizen_man9p1
    ]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_sng_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_nothing")
async def query_ru_ig_in_sitizen_vng_only_nothing(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        f'''<b>–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –º–æ–∂–µ—Ç —á—Ç–æ-—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ –í–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç</b>
1Ô∏è‚É£ –í–µ—Ç–µ—Ä–∞–Ω –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã –∏ —Ä–∞–Ω–µ–µ —Å–æ—Å—Ç–æ—è–ª –≤ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–µ –±—ã–≤—à–µ–≥–æ –°–°–°–†.
2Ô∏è‚É£ –†–∞–Ω–µ–µ —Å–æ—Å—Ç–æ—è–ª –≤ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–µ –†–§ (–æ—Ñ–æ—Ä–º–∏–ª –≤—ã—Ö–æ–¥ –∏–∑ –†–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞).
3Ô∏è‚É£ –ü–æ–ª—É—á–∏–ª –ø–æ—Å–ª–µ 1 –∏—é–ª—è 202 –≥–æ–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –†–æ—Å—Å–∏–∏.
4Ô∏è‚É£ –Ø–≤–ª—è—é—Å—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–º –∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫—É—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§ –Ω–µ –º–µ–Ω–µ–µ —Ç—Ä–µ—Ö –ª–µ—Ç.
5Ô∏è‚É£ –Ø–≤–ª—è—é—Å—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–º.
6Ô∏è‚É£ –ö–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç.
7Ô∏è‚É£ –ù–µ—Ç—Ä—É–¥–æ—Å–ø–æ—Å–æ–±–Ω—ã–π –≥—Ä–∞–∂–∞–Ω–∏–Ω, –ø—Ä–∏–±—ã–ª –≤ –†–§ –∏–∑ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞, –≤—Ö–æ–¥–∏–≤—à–µ–µ –≤ —Å–æ—Å—Ç–∞–≤ –°–°–°–†, –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –Ω–∞ 1–∏—é–ª—è 2002 –≥–æ–¥–∞.
8Ô∏è‚É£ –ú–Ω–µ, —É–≤—ã, –Ω–∏—á–µ–≥–æ –∏–∑ —ç—Ç–æ–≥–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç
{Text_serv.ru_ancor_bottom}
''']
    keyboards = [key_s["ru_ig_sitizen_vng_only_nothing_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_vov")
async def query_ru_ig_in_sitizen_vng_only_vov(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man15p1, Text_serv.sitizen_man15p2
    ]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_nothing_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_raneerf")
async def query_ru_ig_in_sitizen_vng_only_raneerf(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man16
    ]
    keyboards = [key_s["ru_ig_in_sitizen_vng_only_nothing_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_profobraz")
async def query_ru_ig_in_sitizen_vng_only_profobraz(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man17p1, Text_serv.sitizen_man17p2
    ]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_nothing_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_ip")
async def query_ru_ig_in_sitizen_vng_only_ip(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man18p1, Text_serv.sitizen_man18p2
    ]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_nothing_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_investor")
async def query_ru_ig_in_sitizen_vng_only_investor(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man19p1, Text_serv.sitizen_man19p2
    ]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_nothing_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_kvspec")
async def query_ru_ig_in_sitizen_vng_only_kvspec(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man20p1, Text_serv.sitizen_man20p2
    ]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_nothing_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)

@dp.callback_query_handler(text="ru_ig_in_sitizen_vng_only_netrud")
async def query_ru_ig_in_sitizen_vng_only_netrud(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    message_texts = [
        Text_serv.sitizen_man21p1, Text_serv.sitizen_man21p2
    ]
    keyboards = [None, key_s["ru_ig_in_sitizen_vng_only_nothing_back_key"]]
    await delete_previous_messages(user_id, message_storage)
    await send_and_save_messages(user_id, message_texts, keyboards, message_storage)
async def send_startup_temp():
    await bot.send_message(chat_id=group_id_guvm, text='–Ø –æ–Ω–ª–∞–π–Ω')

async def on_startup(dp):
    await send_startup_temp()

async def send_shutdown_temp():
    await bot.send_message(chat_id=group_id_guvm, text='–Ø –æ—Ñ–ª–∞–π–Ω')

async def on_shutdown(dp):
    await send_shutdown_temp()

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    message_storage = {}
    last_user_messages = {}
    user_languages = {}
    from aiogram import executor

    executor.start_polling(dp, skip_updates=True, on_startup=on_startup, on_shutdown=on_shutdown)